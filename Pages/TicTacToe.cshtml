@page
@model Project_MMXXIII.Pages.TicTacToeModel
@{

}

<!-- btn btn-light btn-circle btn-xl -->

<div id="game-name">
    <h1>Tic Tac Toe!</h1>
</div>

<div id="tictactoe-container">

    <div>
        <div class="button-holder">
            <button class="actual-button" id="x1, y1"></button>
        </div>
        <div class="vertical-line"></div>
        <div class="button-holder">
            <button class="actual-button" id="x2, y1"></button>
        </div>
        <div class="vertical-line"></div>
        <div class="button-holder">
            <button class="actual-button" id="x3, y1"></button>
        </div>
    </div>
    
    <div class="horizontal-line"></div>
    
    <div>
        <div class="button-holder">
            <button class="actual-button" id="x1, y2"></button>
        </div>
        <div class="vertical-line"></div>
        <div class="button-holder">
            <button class="actual-button" id="x2, y2"></button>
        </div>
        <div class="vertical-line"></div>
        <div class="button-holder">
            <button class="actual-button" id="x3, y2"></button>
        </div>
    </div>
    
    <div class="horizontal-line"></div>
    
    <div>
        <div class="button-holder">
            <button class="actual-button" id="x1, y3"></button>
        </div>
        <div class="vertical-line"></div>
        <div class="button-holder">
            <button class="actual-button" id="x2, y3"></button>
        </div>
        <div class="vertical-line"></div>
        <div class="button-holder">
            <button class="actual-button" id="x3, y3"></button>
        </div>
    </div>

</div>

<div class="disabled-game-result-container" id="game-result">
    <p id="result-paragraph"></p>
    <div id="restart-button-container">
        <button class="disabled-restart-button" id="restart-button-id">Play again</button>
    </div>
</div>

<script>
      let gameResult = document.getElementById("game-result");
      let restartButton = document.getElementById("restart-button-id");
      let resultParagraph = document.getElementById("result-paragraph");
      restartButton.disabled = true;

      document.getElementById("x1, y1").addEventListener("click", function() { clickedField(1,1);});
      document.getElementById("x1, y2").addEventListener("click", function() { clickedField(1,2);});
      document.getElementById("x1, y3").addEventListener("click", function() { clickedField(1,3);});
      document.getElementById("x2, y1").addEventListener("click", function() { clickedField(2,1);});
      document.getElementById("x2, y2").addEventListener("click", function() { clickedField(2,2);});
      document.getElementById("x2, y3").addEventListener("click", function() { clickedField(2,3);});
      document.getElementById("x3, y1").addEventListener("click", function() { clickedField(3,1);});
      document.getElementById("x3, y2").addEventListener("click", function() { clickedField(3,2);});
      document.getElementById("x3, y3").addEventListener("click", function() { clickedField(3,3);});
        
      var scheme = document.location.protocol === "https:" ? "wss" : "ws";
      var port = document.location.port ? (":" + document.location.port) : "";
      var socket;
      
      var connectionUrl = scheme + "://" + document.location.hostname + port + "/ws";

      socket = new WebSocket(connectionUrl);

      function clickedField(x, y) {
          if (!socket || socket.readyState !== WebSocket.OPEN) {
              alert("Connection error!");
          }
          var data = "x" + x + ", y" + y;
          socket.send(data);
      }

      let array = [
        document.getElementById("x1, y1"),
        document.getElementById("x1, y2"),
        document.getElementById("x1, y3"),
        document.getElementById("x2, y1"),
        document.getElementById("x2, y2"),
        document.getElementById("x2, y3"),
        document.getElementById("x3, y1"),
        document.getElementById("x3, y2"),
        document.getElementById("x3, y3"),
      ]


      socket.onmessage = function (event) {
        if (event.data === "x win.") {
            resultParagraph.innerHTML = "X won!";
            gameResult.classList.remove("disabled-game-result-container");
            gameResult.classList.add("game-result-container");
            restartButton.disabled = false;
            restartButton.classList.remove("disabled-restart-button");
            restartButton.classList.add("restart-button");
            return;
        }

        if (event.data == "o win.") {
            resultParagraph.innerHTML = "O won!";
            gameResult.classList.remove("disabled-game-result-container");
            gameResult.classList.add("game-result-container");
            restartButton.disabled = false;
            restartButton.classList.remove("disabled-restart-button");
            restartButton.classList.add("restart-button");
            return;
        }

        let new_values = event.data.split(";"); 
        console.log(new_values)

        for (i = 0; i < 3; i++) {
            for (j = 0; j < 3; j++) {
                if (new_values[j + 3 * i][7] !== "\x00") {
                    array[j + 3 * i].textContent = new_values[j + 3 * i][7];
                    array[j + 3 * i].disabled = true;
                    array[j + 3 * i].classList.remove("actual-button");
                    array[j + 3 * i].classList.add("disabled-button");
                }
            }
        }
      }

     

</script>